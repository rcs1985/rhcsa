   53  dnf remove -y podman-docker
   54  cat /etc/hosts
   55  ip a
   56  cp -p /etc/hosts /etc/hosts-bkp-16august2024
   57  ip a
   58  nmcli connection show e730a560-9f55-452c-a3a2-886c6bdfa5cc 
   59  ls -lrt
   60  ip a
   61  vi /etc/hosts
   62  cat /etc/hosts
   63  ping node1.example.com
   64  ping node2
   65  wapoff -a
   66  hostnamectl
   67  lsblk
   68  free -g
   69  swapoff -a
   70  free -g
   71  systemctl status firewalld ; systemctl stop firewalld ; systemctl disable firewalld;systemctl status firewalld
   72  systemctl status firewalld ; systemctl stop firewalld ; systemctl disable firewalld
   73  systemctl status firewalld
   74  systemctl status firewalld.service 
   75  clear
   76  getenforce 
   77  setenforce 0
   78  getenforce 
   79  yum install wget -y
   80  wget https://download.docker.com/linux/centos/7/x86_64/stable/Packages/containerd.io-1.6.10-3.1.el7.x86_64.rpm
   81  yum localinstall containerd.io-1.6.10-3.1.el7.x86_64.rpm -y
   82  systemctl start  containerd.service; systemctl enable containerd.service; systemctl status containerd.service
   83  systemctl status containerd.service
   84  clear
   85  cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
overlay
br_netfilter
EOF

   86  modprobe overlay; sudo modprobe br_netfilter
   87  cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-iptables  = 1
net.bridge.bridge-nf-call-ip6tables = 1
net.ipv4.ip_forward                 = 1
EOF

   88  cat <<EOF | sudo tee /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://pkgs.k8s.io/core:/stable:/v1.29/rpm/
enabled=1
gpgcheck=1
gpgkey=https://pkgs.k8s.io/core:/stable:/v1.29/rpm/repodata/repomd.xml.key
exclude=kubelet kubeadm kubectl cri-tools kubernetes-cni
EOF

   89  clear
   90  sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config
   91  yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes
   92  systemctl enable --now kubelet
   93  clear
   94  kubeadm init phase preflight
   95  rm /etc/containerd/config.toml
   96  systemctl restart containerd.service
   97  kubeadm init phase preflight
   98  kubectl get nodes
   99  ls -lrt
  100  pwd
  101  cd /etc/yum.repos.d/
  102  ls -lrt
  103  cat kubernetes.repo 
  104  kubectl get componentstatuses
  105  clear
  106  kubeadm init --pod-network-cidr=192.168.0.0/24
  107  export KUBECONFIG=/etc/kubernetes/admin.conf
  108  echo $KUBERCONFIG
  109  echo $KUBECONFIG
  110  kubectl get node
  111  kubectl get pod -A
  112  cd /
  113  clear
  114  wget https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml
  115  cat kube-flannel.yml | grep -A10 Network
  116  vi kube-flannel.yml
  117  cat kube-flannel.yml | grep -A10 Network
  118  pwd
  119  cd /etc/yum.repos.d/
  120  ls -lrt
  121  ls -lart
  122  cd /
  123  ls -lrt
  124  kubectl create -f kube-flannel.yml
  125  kubectl get pod -A
  126  kubectl get pod -A -w
  127  kubectl get pod -A
  128  kubectl get pod -A -w
  129  kubectl get pod -A
  130  kubectl get nodes
  131  kubectl get pod -A
  132  kubectl get pod -A -w
  133  kubectl get pod -A
  134  kubectl patch node node1 -p '{"spec":{"podCIDR":"192.168.0.0/24"}}'
  135  kubectl get pod -A
  136  kubectl get pod -A -w
  137  kubectl get pod -A
  138  history
  139  kubectl patch node node2 -p '{"spec":{"podCIDR":"192.168.0.0/24"}}'
  140  kubectl get pod -A
  141  kubectl get pod
  142  kubectl get nodes
  143  kubectl get pod -A
  144  history
